Parameters:
  RootDomainName:
    Description: Domain name for your website (example.com)
    Type: String
  SubDomain:
    Description: Sub-domain segment defaults to "www"
    Type: String
    Default: 'www'
  Region:
    Description: Default AWS region
    Type: String
    Default: 'us-east-1'
Mappings:
  RegionMap:
    us-east-1:
      S3hostedzoneID: Z3AQBSTGFYJSTF
      websiteendpoint: s3-website-us-east-1.amazonaws.com
    us-west-1:
      S3hostedzoneID: Z2F56UZL2M1ACD
      websiteendpoint: s3-website-us-west-1.amazonaws.com
    us-west-2:
      S3hostedzoneID: Z3BJ6K6RIION7M
      websiteendpoint: s3-website-us-west-2.amazonaws.com
    eu-west-1:
      S3hostedzoneID: Z1BKCTXD74EZPE
      websiteendpoint: s3-website-eu-west-1.amazonaws.com
    ap-southeast-1:
      S3hostedzoneID: Z3O0J2DXBE1FTB
      websiteendpoint: s3-website-ap-southeast-1.amazonaws.com
    ap-southeast-2:
      S3hostedzoneID: Z1WCIGYICN2BYD
      websiteendpoint: s3-website-ap-southeast-2.amazonaws.com
    ap-northeast-1:
      S3hostedzoneID: Z2M4EHUR26P7ZW
      websiteendpoint: s3-website-ap-northeast-1.amazonaws.com
    sa-east-1:
      S3hostedzoneID: Z31GFT0UA1I2HV
      websiteendpoint: s3-website-sa-east-1.amazonaws.com
Resources:
  RootBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref RootDomainName
      AccessControl: BucketOwnerFullControl
      WebsiteConfiguration:
        RedirectAllRequestsTo:
          HostName: !Ref SubDomainBucket
  SubDomainBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub
          - ${Sub}.${Domain}
          - Domain: !Ref RootDomainName
            Sub: !Ref SubDomain
      AccessControl: PublicRead
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: 404.html

  SubDomainBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref SubDomainBucket
      PolicyDocument:
        Statement:
        - Action: s3:GetObject
          Effect: Allow
          Principal:
            CanonicalUser: !GetAtt DistributionOAI.S3CanonicalUserId
          Resource: !Join ['', ['arn:aws:s3:::', !Ref 'SubDomainBucket', /*]]

  SSLCert:
    Type: AWS::CertificateManager::Certificate
    Properties:
      DomainName: !Sub
        - ${Sub}.${Domain}
        - Domain: !Ref RootDomainName
          Sub: !Ref SubDomain
      SubjectAlternativeNames:
        - !Ref RootDomainName
      ValidationMethod: DNS
  Distribution:
    Type: AWS::CloudFront::Distribution
    DependsOn:
      - SubDomainBucket
      - SubDomainBucket
      - SSLCert
    Properties:
      DistributionConfig:
        Origins:
          - DomainName: !Sub
              - ${Sub}.${Domain}.s3.amazonaws.com
              - Domain: !Ref RootDomainName
                Sub: !Ref SubDomain
            Id: SubDomainBucketOrigin
            S3OriginConfig:
              OriginAccessIdentity: !Join ['', ['origin-access-identity/cloudfront/', !Ref DistributionOAI]]
        CustomErrorResponses:
          - ErrorCachingMinTTL: 60
            ErrorCode: 404
            ResponseCode: 404
            ResponsePagePath: '/404.html'
        Enabled: true
        HttpVersion: 'http2'
        DefaultRootObject: index.html
        Aliases:
          - !Sub
            - ${Sub}.${Domain}
            - Domain: !Ref RootDomainName
              Sub: !Ref SubDomain
        DefaultCacheBehavior:
          DefaultTTL: 86400
          AllowedMethods:
          - GET
          - HEAD
          Compress: true
          TargetOriginId: SubDomainBucketOrigin
          ForwardedValues:
            QueryString: true
            Cookies:
              Forward: none
          ViewerProtocolPolicy: redirect-to-https
        PriceClass: PriceClass_All
        ViewerCertificate:
          AcmCertificateArn: !Ref SSLCert
          MinimumProtocolVersion: TLSv1.1_2016
          SslSupportMethod: sni-only

  DistributionOAI:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: 'No comment'
  DNS:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneName: !Sub 
          - ${Domain}.
          - Domain: !Ref RootDomainName
      RecordSets:
      - Name: !Sub
        - ${Sub}.${Domain}
        - Domain: !Ref RootDomainName
          Sub: !Ref SubDomain
        Type: A
        AliasTarget:
          DNSName: !GetAtt Distribution.DomainName
          EvaluateTargetHealth: false
          HostedZoneId: Z2FDTNDATAQYW2
      - Name: !Ref RootDomainName
        Type: A
        AliasTarget:
          DNSName: !FindInMap [ RegionMap, !Ref 'AWS::Region', websiteendpoint]
          HostedZoneId: !FindInMap [ RegionMap, !Ref 'AWS::Region', S3hostedzoneID]
Outputs:
  WebsiteURL:
    Value: !GetAtt SubDomainBucket.WebsiteURL
    Description: URL for website hosted on S3
  SourceBucket:
    Value: !Sub
      - ${Sub}.${Domain}
      - Domain: !Ref RootDomainName
        Sub: !Ref SubDomain
  DistributionID:
    Value: !Ref Distribution
    Description: CloudFront distribution ID, used to create cache invalidation
